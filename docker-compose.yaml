version: '3.8'

networks:
  test-network:
    name: test-network
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.100.10.0/24
services:
  mosquitto:
    image: eclipse-mosquitto:2
    hostname: mosquitto
    container_name: mosquitto
    expose:
      - "1883"
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mosquitto/config/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    networks:
      test-network:
        ipv4_address: 172.100.10.5
  mosquitto-publisher:
    build:
      context: ./mosquitto-publisher
      dockerfile: Dockerfile
    stdin_open: true
    tty: true
    depends_on:
      - mosquitto
    networks:
      test-network:
        ipv4_address: 172.100.10.6   
  zookeeper:
    image: zookeeper:3.4.9
    restart: unless-stopped
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
        ZOO_MY_ID: 1
        ZOO_PORT: 2181
        ZOO_SERVERS: server.1=zookeeper:2888:3888
    volumes:
      - ./zookeeper/data:/data
      - ./zookeeper/datalog:/datalog
    networks:
      test-network:
        ipv4_address: 172.100.10.10
  kafka:
    image: confluentinc/cp-kafka:7.5.1.arm64
    hostname: kafka
    container_name: kafka
    restart: always
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_ZOOKEEPER_CONNECT: "172.100.10.10:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "realtime-data:1:1"
    volumes:
      - ./kafka/data:/var/lib/kafka/data
    depends_on:
      - zookeeper
    networks:
      test-network:
        ipv4_address: 172.100.10.11
  kafka-mqtt-connector:
    image: arthurgrigo/simple-kafka-mqtt-connector:0.1.0
    restart: always
    hostname: simple-kafka-mqtt-connector
    container_name: simple-kafka-mqtt-connector
    environment:
      KAFKA_HOST: 172.100.10.11 #EDITME IP THROUGH WHICH THE KAFKA BROKER WILL BE REACHED
      KAFKA_PORT: 9092
      KAFKA_CLIENT_ID: simple-kafka-mqtt-connector-1
      MQTT_HOST: 172.100.10.5 #EDITME IP THROUGH WHICH THE MQTT BROKER WILL BE REACHED
      MQTT_PORT: 1883
      MQTT_CLIENT_ID: simple-kafka-mqtt-connector-1
      MQTT_QOS: 2
      TOPIC_MAPPING: farm_id/device_id/testclient1>>>realtime-data #EDITME mqttTopicA>>>kafkaTopicA;mqttTopicB>>>kafkaTopicB;mqttTopicC>>>kafkaTopicC
    depends_on:
      - kafka
      - mosquitto
    networks:
      test-network:
        ipv4_address: 172.100.10.12
  ingestor:
    build:
      context: ./go-ingestor
      dockerfile: Dockerfile
    environment:
      CONFIG_FILE: /config/config.yaml
    volumes:
      - ./go-ingestor/config/config.yaml:/config/config.yaml
    restart: always
    hostname: ingestor
    container_name: ingestor
    depends_on:
      - zookeeper
      - kafka
    networks:
      test-network:
        ipv4_address: 172.100.10.13
  

     # - ./postgres/configdb/init.sql:/docker-entrypoint-initdb.d/init.sql
     # - ./postgres/db/:/var/lib/postgresql/data/

  timescaledb:
    image: timescale/timescaledb-ha:pg14-latest
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    volumes:
      - ./timescaledb/config/020-init.sql:/docker-entrypoint-initdb.d/020-init.sql
      - ./timescaledb/data:/home/postgres/pgdata/data
    networks:
      test-network:
        ipv4_address: 172.100.10.20
  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"
    networks:
      test-network:
        ipv4_address: 172.100.10.21
